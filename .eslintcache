[{"/Users/elvira/Documents/js/react/github-finder/src/index.js":"1","/Users/elvira/Documents/js/react/github-finder/src/App.js":"2","/Users/elvira/Documents/js/react/github-finder/src/components/layout/Navbar.js":"3","/Users/elvira/Documents/js/react/github-finder/src/components/users/UserItem.js":"4","/Users/elvira/Documents/js/react/github-finder/src/components/users/Users.js":"5","/Users/elvira/Documents/js/react/github-finder/src/components/layout/Spinner.js":"6","/Users/elvira/Documents/js/react/github-finder/src/components/users/Search.js":"7","/Users/elvira/Documents/js/react/github-finder/src/components/layout/Alert.js":"8","/Users/elvira/Documents/js/react/github-finder/src/components/users/User.js":"9","/Users/elvira/Documents/js/react/github-finder/src/components/pages/About.js":"10","/Users/elvira/Documents/js/react/github-finder/src/components/repos/Repos.js":"11","/Users/elvira/Documents/js/react/github-finder/src/components/repos/RepoItem.js":"12"},{"size":197,"mtime":1610051193912,"results":"13","hashOfConfig":"14"},{"size":3451,"mtime":1610439217001,"results":"15","hashOfConfig":"14"},{"size":676,"mtime":1610363008676,"results":"16","hashOfConfig":"14"},{"size":513,"mtime":1610392339221,"results":"17","hashOfConfig":"14"},{"size":595,"mtime":1610362556621,"results":"18","hashOfConfig":"14"},{"size":277,"mtime":1610308156048,"results":"19","hashOfConfig":"14"},{"size":1351,"mtime":1610355881570,"results":"20","hashOfConfig":"14"},{"size":256,"mtime":1610362466334,"results":"21","hashOfConfig":"14"},{"size":3015,"mtime":1610439792859,"results":"22","hashOfConfig":"14"},{"size":237,"mtime":1610362222834,"results":"23","hashOfConfig":"14"},{"size":284,"mtime":1610440034284,"results":"24","hashOfConfig":"14"},{"size":344,"mtime":1610442142666,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1pp6jiz",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/elvira/Documents/js/react/github-finder/src/index.js",[],["54","55"],"/Users/elvira/Documents/js/react/github-finder/src/App.js",[],"/Users/elvira/Documents/js/react/github-finder/src/components/layout/Navbar.js",[],"/Users/elvira/Documents/js/react/github-finder/src/components/users/UserItem.js",[],"/Users/elvira/Documents/js/react/github-finder/src/components/users/Users.js",[],["56","57"],"/Users/elvira/Documents/js/react/github-finder/src/components/layout/Spinner.js",[],"/Users/elvira/Documents/js/react/github-finder/src/components/users/Search.js",[],"/Users/elvira/Documents/js/react/github-finder/src/components/layout/Alert.js",[],["58","59"],"/Users/elvira/Documents/js/react/github-finder/src/components/users/User.js",["60"],"import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Repos from './../repos/Repos';\n\nexport class User extends Component {\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.login);\n    this.props.getUserRepos(this.props.match.params.login);\n  }\n  static propTypes = {\n    getUser: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    user: PropTypes.object.isRequired,\n    repos: PropTypes.array.isRequired,\n    getUserRepos: PropTypes.func.isRequired\n  };\n  render() {\n    const {\n      name,\n      company,\n      avatar_url,\n      location,\n      bio,\n      blog,\n      login,\n      html_url,\n      followers,\n      following,\n      public_repos,\n      public_gists,\n      hireable\n    } = this.props.user;\n    const { loading, repos } = this.props;\n    return (\n      <Fragment>\n        <Link to=\"/\" className=\"btn btn-light\">\n          {' '}\n          Back to search{' '}\n        </Link>\n        Hireable: {' '}\n        {hireable ? (\n          <i className=\"fas fa-check text-success\" />\n        ) : (\n          <i className=\"fas fa-times-circle text-danger\" />\n        )}\n        <div className=\"card grid-2\">\n          <div className=\"all-center\">\n            <img\n              src={avatar_url}\n              alt=\"User's avatar\"\n              className=\"round-img\"\n              style={{ width: '150px' }}\n            />\n            <h1>{name}</h1>\n            <p>Location: {location}</p>\n          </div>\n          <div>\n            {bio && (\n              <Fragment>\n                <h3>Bio</h3>\n                <p>{bio}</p>\n              </Fragment>\n            )}\n            <a href={html_url} className=\"btn btn-dark my-1\">\n              Visit github profile\n            </a>\n            <ul>\n              <li>\n                {login && (\n                  <Fragment>\n                    <strong>Username: </strong>\n                    {login}\n                  </Fragment>\n                )}\n              </li>\n              <li>\n                {company && (\n                  <Fragment>\n                    <strong>Company: </strong>\n                    {bio}\n                  </Fragment>\n                )}\n              </li>\n              <li>\n                {blog && (\n                  <Fragment>\n                    <strong>Website: </strong>\n                    {blog}\n                  </Fragment>\n                )}\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"card text-center\">\n          <div className=\"badge badge-primary\">Followers: {followers}</div>\n          <div className=\"badge badge-light\">Following: {following}</div>\n          <div className=\"badge badge-success\">\n            Public repos: {public_repos}\n          </div>\n          <div className=\"badge badge-dark\">Public gists: {public_gists}</div>\n        </div>\n        <Repos repos={repos} />\n      </Fragment>\n    );\n  }\n}\n\nexport default User;\n","/Users/elvira/Documents/js/react/github-finder/src/components/pages/About.js",[],"/Users/elvira/Documents/js/react/github-finder/src/components/repos/Repos.js",[],"/Users/elvira/Documents/js/react/github-finder/src/components/repos/RepoItem.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"61","replacedBy":"65"},{"ruleId":"63","replacedBy":"66"},{"ruleId":"61","replacedBy":"67"},{"ruleId":"63","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":34,"column":13,"nodeType":"71","messageId":"72","endLine":34,"endColumn":20},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],["73"],["74"],["73"],["74"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]